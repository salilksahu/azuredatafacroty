{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "salildatafactory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/populate_secs')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "load_sec_data_stage",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Symbol",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "symbol",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Series",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "series",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Security Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "security_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Band",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Band",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Remarks",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Remarks",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "seclist",
								"type": "DatasetReference",
								"parameters": {
									"secfilename": {
										"value": "@pipeline().parameters.secfilename",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "secstage",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "load_sec_to_main",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "load_sec_data_stage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "populatesecs",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "move_sec_file",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "load_sec_to_main",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "seclist",
								"type": "DatasetReference",
								"parameters": {
									"secfilename": {
										"value": "@pipeline().parameters.secfilename",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "secoutfile",
								"type": "DatasetReference"
							}
						]
					},
					{
						"name": "delete_sec_list",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "move_sec_file",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "seclist",
								"type": "DatasetReference",
								"parameters": {
									"secfilename": {
										"value": "@pipeline().parameters.secfilename",
										"type": "Expression"
									}
								}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "nsestorage",
									"type": "LinkedServiceReference"
								},
								"path": "input"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"parameters": {
					"secfilename": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/seclist')]",
				"[concat(variables('factoryId'), '/dataflows/populatesecs')]",
				"[concat(variables('factoryId'), '/datasets/secoutfile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SecTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureNSEDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "symbol",
						"type": "varchar"
					},
					{
						"name": "series",
						"type": "varchar"
					},
					{
						"name": "security_name",
						"type": "varchar"
					},
					{
						"name": "Band",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Remarks",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "securities"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/seclist')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "nsestorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"secfilename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().secfilename",
							"type": "Expression"
						},
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Symbol",
						"type": "String"
					},
					{
						"name": "Series",
						"type": "String"
					},
					{
						"name": "Security Name",
						"type": "String"
					},
					{
						"name": "Band",
						"type": "String"
					},
					{
						"name": "Remarks",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/populatesecs')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "secstage",
								"type": "DatasetReference"
							},
							"name": "secdata"
						},
						{
							"dataset": {
								"referenceName": "SecTable",
								"type": "DatasetReference"
							},
							"name": "dbsecdata"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SecTable",
								"type": "DatasetReference"
							},
							"name": "secmain"
						}
					],
					"transformations": [
						{
							"name": "secseriesmacth"
						},
						{
							"name": "splitsecs"
						},
						{
							"name": "macthingsecs"
						}
					],
					"script": "source(output(\n\t\tid as integer,\n\t\tsymbol as string,\n\t\tseries as string,\n\t\tsecurity_name as string,\n\t\tBand as integer,\n\t\tRemarks as string,\n\t\tupdate_time as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> secdata\nsource(output(\n\t\tsymbol as string,\n\t\tseries as string,\n\t\tsecurity_name as string,\n\t\tBand as integer,\n\t\tRemarks as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_COMMITTED',\n\tformat: 'table') ~> dbsecdata\nsecdata, dbsecdata lookup(secdata@symbol == dbsecdata@symbol\n\t&& secdata@series == dbsecdata@series,\n\tmultiple: true,\n\tbroadcast: 'both')~> secseriesmacth\nmacthingsecs split(matchvalue,\n\tdisjoint: false) ~> splitsecs@(ignoreinserted, insertabsent)\nsecseriesmacth derive(matchvalue = isMatch()) ~> macthingsecs\nsplitsecs@insertabsent sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tsymbol as string,\n\t\tseries as string,\n\t\tsecurity_name as string,\n\t\tBand as integer,\n\t\tRemarks as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tsymbol = splitsecs@insertabsent@symbol,\n\t\tseries = splitsecs@insertabsent@series,\n\t\tsecurity_name = splitsecs@insertabsent@security_name,\n\t\tBand = splitsecs@insertabsent@Band,\n\t\tRemarks = splitsecs@insertabsent@Remarks\n\t)) ~> secmain"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SecTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/secoutfile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "nsestorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat('sec_out',utcnow(),'.csv')",
							"type": "Expression"
						},
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/new_sec_file_added')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "populate_secs",
							"type": "PipelineReference"
						},
						"parameters": {
							"secfilename": "@triggerBody().fileName"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/input/blobs/'sec'",
					"ignoreEmptyBlobs": true,
					"scope": "/subscriptions/7d62fa9c-ddf9-43b0-bde2-32606723987c/resourceGroups/StockGroup/providers/Microsoft.Storage/storageAccounts/stockmarketfiles",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/populate_secs')]"
			]
		}
	]
}